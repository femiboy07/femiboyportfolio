[
    {
        "id": 1,
        "projectName": "ulevalwebsite",
        "projectLink": "https://uleval.com/",
        "projectImage": "uleval.png",
        "description": " As an intern in uleval technology i worked on their front end home page design using wordpress and php.",
        "tools": [
            "Wordpress",
            "php",
            "js"
        ]
    },
    {
        "id": 2,
        "projectName": "chatapp",
        "projectLink": "https://chatt-app-lac.vercel.app/",
        "projectImage": "chatt-app-lac.vercel.app_channel_Loveisland.png",
        "description": "This Room Chat App is a real-time messaging platform built with React on the frontend and Firebase powering the backend services. It enables users to join designated chat rooms and communicate instantly with others through text-based messages. Here’s an overview of its key features and architecture: Real-Time Communication: Leveraging Firebase’s real-time database, messages sent in a chat room are instantly synchronized across all connected clients. Users see updates as soon as they happen, ensuring seamless communication. User Authentication: The app utilizes Firebase Authentication to handle user sign-in and registration securely. Users can log in via email/password or social media providers, creating a personalized and secure chat experience. Chat Room Structure: The interface allows users to browse available chat rooms or create new ones. Once inside a room, they can view the conversation history and participate in ongoing discussions. React-Based UI: The application is built using React, making use of reusable components and state management to create a dynamic, responsive user interface. This includes components for chat lists, message threads, and user input forms. Scalability and Ease of Use: Firebase’s backend services reduce the need for server-side infrastructure, allowing the app to scale easily as user demand increases. Meanwhile, React’s efficient rendering ensures that the user experience remains smooth even as the chat data grows.",
        "tools": [
            "React",
            "Firebase"
        ]
    },
    {
        "id": 3,
        "projectName": "kanbanboard",
        "projectLink": "https://task-management-app-gilt.vercel.app/",
        "projectImage": "task-management-app-gilt.vercel.app.png",
        "description": "So i created a basic kanbanboard using react,typescript . it was challenging handling the drag and drop and managing the logic with redux but i got it ",
        "tools": [
            "React"
        ]
    },
    {
        "id": 4,
        "projectName": "connect4",
        "projectLink": "https://connect4-multi-player.vercel.app/",
        "projectImage": "connect4-multi-player.vercel.app_r_99030617-d391-47e5-ac6b-00b1705dbac4.png",
        "description": "i created an online multiplayer connect4 game and i got the design from front-end-mentor, This Connect4 app is hosted on a free-tier service, which means the server may enter a \"sleep\" state during periods of inactivity. As a result, when initiating a new game (e.g., clicking \"find player\"), there might be a short delay (cold start) before the server fully spins up and the game begins. In a production environment, this issue can be resolved by upgrading to a paid tier or implementing strategies to keep the server active.",
        "tools": [
            "React",
            "Nest.js",
            "socket.io"
        ]
    },
    {
        "id": 5,
        "projectName": "financeapp",
        "projectLink": "https://finance-care-1.vercel.app/",
        "projectImage": "finance-care.vercel.app_auth_login.png",
        "description": "A basic fullstack budget app to orgarnize and manage spendings. so i worked on authentication , authorization , creating api routes for creating budget and so on and so forth ",
        "tools": [
            "React",
            "Express.js",
            "Node.js"
        ]
    }
]